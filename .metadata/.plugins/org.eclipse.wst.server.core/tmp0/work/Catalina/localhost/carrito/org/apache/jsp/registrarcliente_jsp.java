/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-05-04 03:25:05 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import modelo.Productos;
import modelo.Clientes;
import controller.CarritoBD;
import java.util.List;
import java.util.ArrayList;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.ParseException;

public final class registrarcliente_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(8);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("controller.CarritoBD");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("modelo.Productos");
    _jspx_imports_classes.add("modelo.Clientes");
    _jspx_imports_classes.add("java.text.ParseException");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("	<head>\r\n");
      out.write("		<meta charset=\"ISO-8859-1\">\r\n");
      out.write("		<title>AÃ‘ADIR - CLIENTE </title>\r\n");
      out.write("		<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n");
      out.write("	<style>\r\n");
      out.write("         body {\r\n");
      out.write("    	background: linear-gradient(to bottom right, #ff4d4d, #ffffff);\r\n");
      out.write("    	margin: 0;\r\n");
      out.write("    	padding: 0;\r\n");
      out.write("   	 	height: 100vh;\r\n");
      out.write("   	 	display: flex;\r\n");
      out.write("    	flex-direction: column;\r\n");
      out.write("    	align-items: center;\r\n");
      out.write("		}\r\n");
      out.write("        .container {\r\n");
      out.write("            margin-top: 50px;\r\n");
      out.write("        }\r\n");
      out.write("        .form-container {\r\n");
      out.write("            background-color: #ffffff;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            padding: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        .form-title {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("        }\r\n");
      out.write("        .form-label {\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("        .form-control {\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .submit-btn {\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("	</head>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write(" ");

        HttpSession sesion = request.getSession();  
    
		CarritoBD ObjBD = new CarritoBD(); // CONTROLADOR
		Clientes   user = new  Clientes();		
				
		String ape = (String) request.getParameter   ("apellido");
		String name = (String) request.getParameter  ("nombre");
		String direc = (String) request.getParameter ("direc");
		String fec = (String) request.getParameter   ("fecnaci");
		String sexo = (String) request.getParameter("sexo");
		String correo = (String) request.getParameter("correo");
        String IdPass = (String) request.getParameter("password");		
		
        
        
        if (ape != null && !ape.isEmpty() &&
        	    name != null && !name.isEmpty() &&
        	    direc != null && !direc.isEmpty() &&
        	    fec != null && !fec.isEmpty() &&
        	    sexo != null && !sexo.isEmpty() &&
        	    correo != null && !correo.isEmpty() &&
        	    IdPass != null && !IdPass.isEmpty()) {
        	
            Clientes nuevo = new Clientes();
            
            nuevo.setApellidos(ape);
            nuevo.setNombres(name);
            nuevo.setDireccion(direc);
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date fechaNacimiento = sdf.parse(fec);
            	
            nuevo.setFechaNacimiento(fec);
            
            char sexo1 = sexo.charAt(0);
            nuevo.setSexo(sexo1);
            nuevo.setCorreo(correo);
            nuevo.setPassword(IdPass);
            
            ObjBD.InsertarCliente(nuevo);        	
        	
        }

        
         
	
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("        <div class=\"row justify-content-center\">\r\n");
      out.write("            <div class=\"col-md-6\">\r\n");
      out.write("                <div class=\"form-container\">\r\n");
      out.write("                    <h2 class=\"form-title\">Registrar Cliente</h2>\r\n");
      out.write("                    <form action=\"\" method=\"post\">\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"apellido\" class=\"form-label\">Apellidos:</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"apellido\" name=\"apellido\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"nombre\" class=\"form-label\">Nombres:</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"direc\" class=\"form-label\">DirecciÃ³n:</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"direc\" name=\"direc\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"fecnaci\" class=\"form-label\">Fecha de nacimiento:</label>\r\n");
      out.write("                            <input type=\"date\" class=\"form-control\" id=\"fecnaci\" name=\"fecnaci\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"sexo\" class=\"form-label\">Sexo:</label>\r\n");
      out.write("                            <input type=\"text\" class=\"form-control\" id=\"sexo\" name=\"sexo\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"correo\" class=\"form-label\">Correo:</label>\r\n");
      out.write("                            <input type=\"email\" class=\"form-control\" id=\"correo\" name=\"correo\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"mb-3\">\r\n");
      out.write("                            <label for=\"password\" class=\"form-label\">ContraseÃ±a:</label>\r\n");
      out.write("                            <input type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" required>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-primary submit-btn\">Registrar Cliente</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("	<a class=\"btn btn-secondary back-button\" href=\"javascript:history.go(-1)\">\r\n");
      out.write("        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" class=\"bi bi-arrow-left\" viewBox=\"0 0 16 16\">\r\n");
      out.write("            <path fill-rule=\"evenodd\" d=\"M8.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L14.293 8 8.646 2.354a.5.5 0 0 1 0-.708z\"/>\r\n");
      out.write("            <path fill-rule=\"evenodd\" d=\"M1.5 8a.5.5 0 0 1 .5-.5h12a.5.5 0 0 1 0 1h-12a.5.5 0 0 1-.5-.5z\"/>\r\n");
      out.write("        </svg>\r\n");
      out.write("    </a>\r\n");
      out.write("    </div>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
