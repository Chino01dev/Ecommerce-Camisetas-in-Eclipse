/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-05-04 00:41:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.time.format.DateTimeFormatter;
import java.time.LocalDateTime;
import java.sql.Date;
import modelo.*;
import controller.CarritoBD;
import java.util.List;
import java.util.ArrayList;
import java.time.LocalDate;
import java.sql.Date;

public final class confcompra_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_packages.add("modelo");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(7);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("controller.CarritoBD");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.time.LocalDate");
    _jspx_imports_classes.add("java.time.LocalDateTime");
    _jspx_imports_classes.add("java.sql.Date");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("\r\n");
 
      HttpSession sesion = request.getSession();  
      ArrayList<carrito> Lista = (ArrayList<carrito>) sesion.getAttribute("cesto");
      double total_venta = (double) sesion.getAttribute("total");
      char estado = '1';

    
      String fecha = "2024-04-20";

      
      CarritoBD ObjBD = new CarritoBD();; // CONTROLADOR     
      String IdClie = request.getParameter("username");
      
      int filas = ObjBD.NumeroFilas("ventas");
      String idventa ;
      if(filas == 0){  	  
    	  idventa = "VTA0000001";
      }else{
    	  idventa = "VTA"+String.format("%07d",filas+1);
      }
      
      
   // Convertir la cadena a un objeto Date
      String fechaCom = "2024-04-20";
      LocalDate fechaLocal = LocalDate.parse(fecha);
      Date fechaVenta = Date.valueOf(fechaLocal);


      
      double montototal = 0;
 	// Recorrer todos los productos de Lista
 	
 	  if(Lista != null){
 	        Ventas venta = new Ventas();
 	    	
 	        venta.setIdVenta(idventa);
 	    	venta.setIdCliente(IdClie);   	
 	    	venta.setMontoTotal(total_venta);
 	    	venta.setEstado(estado);  
 	    	venta.setFechaVenta(fechaCom);
 	    	
 	    	//aca ya tengo mi venta lista
 	  	
 	    	ObjBD.InsertarVenta(venta);
 	    	
        for (int i = 0; i < Lista.size(); i++) {
        	
        	Detalle detalle = new Detalle();
        	
        	detalle.setCantidad(Lista.get(i).getCantidad());
        	detalle.setIdVenta(idventa);
        	
            Productos item =   new Productos();
            item = ObjBD.InfoProducto(Lista.get(i).getIdProducto());
            
        	detalle.setEstado(item.getEstado());
        	detalle.setIdProducto(Lista.get(i).getIdProducto());
        	detalle.setPrecioUnidad(item.getPrecioUnidad());
        	
        	
        	ObjBD.InsertarDetalle(detalle);
        }
        
    	   	
 	  }
		
 	
 
      out.write("   \r\n");
      out.write(" \r\n");
      out.write(" ");
 
 String idClienteAutenticado = (String) session.getAttribute("idCliente");
Clientes ObjP = new Clientes();
ObjP = ObjBD.InfoCliente(idClienteAutenticado);
 
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Compra Exitosa</title>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("    background-color: #f8f9fa; /* Fondo de color claro */\r\n");
      out.write("    font-family: Arial, sans-serif; /* Tipo de fuente */\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("    max-width: 800px; /* Ancho m치ximo del contenido */\r\n");
      out.write("    margin: 0 auto; /* Centrado horizontal */\r\n");
      out.write("    padding: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".success-message {\r\n");
      out.write("    background-color: #28a745; /* Color de fondo verde */\r\n");
      out.write("    color: #fff; /* Color del texto blanco */\r\n");
      out.write("    border-radius: 10px; /* Bordes redondeados */\r\n");
      out.write("    padding: 20px; /* Espaciado interno */\r\n");
      out.write("    text-align: center; /* Alineaci칩n central del texto */\r\n");
      out.write("    margin-bottom: 30px; /* Margen inferior */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".success-message b {\r\n");
      out.write("    font-size: 1.2em; /* Tama침o de fuente grande */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".return-link {\r\n");
      out.write("    display: block; /* Convertir en bloque para ocupar el ancho completo */\r\n");
      out.write("    background-color: #007bff; /* Color de fondo azul */\r\n");
      out.write("    color: #fff; /* Color del texto blanco */\r\n");
      out.write("    text-decoration: none; /* Sin subrayado */\r\n");
      out.write("    border-radius: 5px; /* Bordes redondeados */\r\n");
      out.write("    padding: 10px 20px; /* Espaciado interno */\r\n");
      out.write("    width: fit-content; /* Ajustar al contenido */\r\n");
      out.write("    margin: 0 auto; /* Centrado horizontal */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".return-link:hover {\r\n");
      out.write("    background-color: #0056b3; /* Color de fondo azul m치s oscuro en el hover */\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    <div class=\"success-message\">\r\n");
      out.write("        <h2>Felicidades por su compra <b>");
      out.print( ObjP.getApellidos());
      out.write(',');
      out.write(' ');
      out.print(ObjP.getNombres());
      out.write("</b>!</h2>\r\n");
      out.write("        <p>Agradecemos su compra y esperamos verlo nuevamente pronto.</p>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <a href=\"cancelar.jsp\" class=\"return-link\">REGRESAR A LA P츼GINA PRINCIPAL</a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write(" ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
