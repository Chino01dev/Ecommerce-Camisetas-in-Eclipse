/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.99
 * Generated at: 2024-05-04 03:27:03 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import modelo.Categorias;
import controller.CarritoBD;
import java.util.List;
import java.util.ArrayList;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("controller.CarritoBD");
    _jspx_imports_classes.add("modelo.Categorias");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"ISO-8859-1\">\r\n");
      out.write("        <title>Camisetas Chino Street</title>\r\n");
      out.write("        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\" rel=\"stylesheet\">\r\n");
      out.write("        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN\" crossorigin=\"anonymous\">\r\n");
      out.write("    <style> \r\n");
      out.write("    body {\r\n");
      out.write("    background: linear-gradient(to bottom right, #ff4d4d, #ffffff);\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    height: 100vh;\r\n");
      out.write("    display: flex;\r\n");
      out.write("    flex-direction: column;\r\n");
      out.write("    align-items: center;\r\n");
      out.write("}\r\n");
      out.write("    .header {\r\n");
      out.write("        background-color: #ff4d4d;\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        padding: 10px;\r\n");
      out.write("        display: flex;\r\n");
      out.write("        justify-content: space-between;\r\n");
      out.write("        align-items: center;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    h2{\r\n");
      out.write("    background-size: cover;\r\n");
      out.write("    background: red;\r\n");
      out.write("    margin-left:50px;\r\n");
      out.write("    padding-right:50px;\r\n");
      out.write("    margin-right: 50px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    }\r\n");
      out.write("    img {\r\n");
      out.write("        width: 150px;\r\n");
      out.write("        height: 150px;\r\n");
      out.write("        margin-bottom: 10px;\r\n");
      out.write("        border-radius: 10px; \r\n");
      out.write("        box-shadow: 0px 4px 8px rgba(0, 0, 0, 2.7);\r\n");
      out.write("        transition: transform 0.3s ease-in-out;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    img:hover {\r\n");
      out.write("        transform: translateY(-5px); \r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .pastel-table {\r\n");
      out.write("        margin-top: 50px;\r\n");
      out.write("        background-color: #f0f0f0; /* Color pastel suave */\r\n");
      out.write("        border-color: #ccc; /* Color de borde */\r\n");
      out.write("        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Sombra suave */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .pastel-table th, .pastel-table td {\r\n");
      out.write("        border-width: 10px; /* Grosor del borde */\r\n");
      out.write("        border-style: solid; /* Estilo del borde */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    .pastel-table td {\r\n");
      out.write("        color: #333; /* Color de texto */\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("    </head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"header\">\r\n");
      out.write("    <h1 class=\"store-name\">Camisetas Chino Street</h1>\r\n");
      out.write("    <a href=\"iniciarsesion.jsp\" class=\"btn-salir\"><i class=\"fas fa-sign-out-alt\"></i></a>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");

    HttpSession sesion = request.getSession();
    if(sesion.getAttribute("numarticulos") == null){
        sesion.setAttribute("numarticulos", 0);
        sesion.setAttribute("total", 0.0);
    }
    //RECUPERANDO DE LA SESION LOS VALORES DE numarticulos y total
    int nroarticulos= (int)(sesion.getAttribute("numarticulos"));
    double total = (double)(sesion.getAttribute("total"));
    CarritoBD ObjBD = new CarritoBD();
    List<Categorias> Lista = new ArrayList<>();
    Lista = ObjBD.ListarCategorias();
    int columnas = 0;


      out.write("   \r\n");
      out.write("    <h2 align=\"right\">Numero de articulos adquiridos: ");
      out.print(nroarticulos );
      out.write("\r\n");
      out.write("    <br> TOTAL ACUMULADO: ");
      out.print(total );
      out.write("\r\n");
      out.write("    </h2>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    <table class=\"table table-bordered rounded shadow pastel-table\">\r\n");
      out.write("    ");
 
       for(Categorias c : Lista){
            String imagen = "<img src='img/" + c.getImagen() + "' width='150' height='150'>";
            String enlace = "<a href='verproductos.jsp?id=" + c.getIdCategoria() + "' class='btn btn-danger'>Ver Productos</a>";
            if(columnas % 3 == 0) out.print("<tr>");
    
      out.write("\r\n");
      out.write("        <td style=\"text-align: center; padding: 20px;\">\r\n");
      out.write("            <h4>");
      out.print(c.getDescripcion());
      out.write("</h4>\r\n");
      out.write("            ");
      out.print(imagen);
      out.write("<br/>\r\n");
      out.write("            ");
      out.print(enlace);
      out.write("\r\n");
      out.write("        </td>\r\n");
      out.write("    ");
 
        columnas++;
        if(columnas % 3 == 0) out.print("</tr>");
       } 
       if(columnas % 3 != 0) out.print("</tr>");
    
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
